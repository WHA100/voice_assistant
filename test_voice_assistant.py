#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import edge_tts
import tempfile
import os
import pygame

def test_edge_tts_voice():
    """–¢–µ—Å—Ç –≥–æ–ª–æ—Å–∞ edge-tts"""
    print("üé§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ edge-tts –≥–æ–ª–æ—Å–∞")
    print("=" * 40)
    
    test_phrases = [
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç",
        "–í—ã–ø–æ–ª–Ω—è—é."
    ]
    
    async def speak_phrases():
        pygame.mixer.init()
        
        for i, phrase in enumerate(test_phrases, 1):
            print(f"{i}. –ü—Ä–æ–∏–∑–Ω–æ—à—É: {phrase}")
            
            try:
                temp_filename = tempfile.mktemp(suffix='.mp3')
                communicate = edge_tts.Communicate(phrase, "ru-RU-SvetlanaNeural")
                await communicate.save(temp_filename)
                
                pygame.mixer.music.load(temp_filename)
                pygame.mixer.music.play()
                
                while pygame.mixer.music.get_busy():
                    await asyncio.sleep(0.1)
                
                try:
                    os.unlink(temp_filename)
                except:
                    pass
                
                await asyncio.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ñ—Ä–∞–∑–∞–º–∏
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
    
    asyncio.run(speak_phrases())
    print("\n‚úÖ –¢–µ—Å—Ç –≥–æ–ª–æ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")

def test_command_confirmations():
    """–¢–µ—Å—Ç —Ñ—Ä–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥"""
    print("\nüìã –§—Ä–∞–∑—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥:")
    print("=" * 40)
    
    confirmations = [
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é.",
        "–í—ã–ø–æ–ª–Ω—è—é."
    ]
    
    for i, confirmation in enumerate(confirmations, 1):
        print(f"{i}. {confirmation}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç —Ñ—Ä–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    test_command_confirmations()
    
    # –¢–µ—Å—Ç –≥–æ–ª–æ—Å–∞
    print("\n" + "=" * 50)
    test_edge_tts_voice()
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("\nüìù –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:")
    print("‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ñ—Ä–∞–∑—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥")
    print("‚Ä¢ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –≤–æ –≤—Ä–µ–º—è AI –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å —á–µ—Ä–µ–∑ edge-tts")
    print("‚Ä¢ –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ –æ—Ç–≤–µ—Ç–æ–≤") 